*ddu-kind-git_repo.txt*	A ddu.vim kind of git repositories
==============================================================================
ACTIONS                                            *ddu-kind-git_repo-actions*

                                               *ddu-kind-git_repo-action-find*
find

	Find files in given repository.

	Dependencies:

		• source-file_external

	Params:

		• ui:	Ui configuration for open finder. ( |ddu-option-ui| )
		  	(default: `#{ name: 'ff' }`)

                                          *ddu-kind-git_repo-action-startTmux*
startTmux

	Start new tmux session in given repository.

	                                        *ddu-kind-git_repo-action-log*
log

	Open git log.

	Params:

	• cmd:	The command to open git log buffer.
		(default: `#{ type: 'cmd', command: 'GinLog ++worktree=%s' }`)

>typescript
	type VimCommand = {
	  type: "cmd";
	  /**
	   * Expected to contains 1 or less %s.
	   * It will be replaced by git repository path on execute.
	   */
	  command: string;
	};

	type VimFunction = {
	  type: "fn";
	  /**
	   * denops callback id.
	   * You can get this by denops#callback#register({funcref}).
	   * Function signature is expected to f(path: string).
	   */
	  callbackId: string;
	};

	type GitLogCmd =
	  | ((denops: Denops, item: GitRepoDduItem) => Promise<void>)
	  | VimCommand
	  | VimFunction;

	export type ActionParams = {
	  cmd?: GitLogCmd;
	};
<

==============================================================================
ACTION DATA                                    *ddu-kind-git_repo-action-data*
>typescript
	type ActionData = {
	  path: string;
	};
<
==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:noet:
